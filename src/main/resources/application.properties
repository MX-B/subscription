# gr1d Portal Subscriptions
spring.application.name=gr1d Portal Subscriptions Service
spring.config.name=gr1d-portal-subscriptions
server.port=${PORT:8080}
spring.profiles.active=@activeProfile@
server.compression.enabled=true
server.compression.min-response-size=32
server.connection-timeout=5000
server.http2.enabled=true

# Log
logging.level.root=${LOG_LEVEL:INFO}
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
#logging.pattern.console=%green([%date{yyyy-MM-dd HH:mm:ss.SSS}]) %highlight(%-5level) %cyan(%logger{0}) - %X{id} %msg %n

# Jackson
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.date-format=yyyy-MM-dd'T'hh:mm:ss'Z'
spring.jackson.time-zone=UTC
spring.jackson.property-naming-strategy=SNAKE_CASE

# Database
spring.datasource.url=${JDBC_CONNECTION_STRING}
spring.datasource.username=${DB_USER:}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.tomcat.max-active=10
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.initial-size=3
spring.datasource.tomcat.min-idle=3
spring.datasource.tomcat.test-on-borrow=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.show-sql=${DB_LOG_SQL:false}

# Keycloak
keycloak.enabled=true
keycloak.realm=${AUTH_REALM:master}
keycloak.auth-server-url=${AUTH_SERVER_URL:https://is.staging.gr1d.io/auth}
keycloak.ssl-required=external
keycloak.resource=${AUTH_CLIENT:gr1d-payments-subscriptions}
keycloak.public-client=false
keycloak.credentials.secret=${AUTH_CLIENT_SECRET:614548f1-961f-4af5-8e8c-7b37de22f412}
keycloak.use-resource-role-mappings=true

gr1d.keycloak.serviceAccount.url=${KEYCLOAK_AUTH_SERVER_URL:keycloak.auth-server-url}
gr1d.keycloak.serviceAccount.realm=${KEYCLOAK_CLIENT_REALM:${keycloak.realm}}
gr1d.keycloak.serviceAccount.clientId=${KEYCLOAK_CLIENT_ID:${keycloak.resource}}
gr1d.keycloak.serviceAccount.clientSecret=${KEYCLOAK_CLIENT_SECRET:${keycloak.credentials.secret}}

gr1d.planSync.enabled=${PLAN_SYNC:false}
gr1d.planSync.cron=${PLAN_CRON:0 0 * * * ?}

# Healthcheck
app.name=${project.artifactId:Subscriptions}
app.version=${project.version:1.0.0}

#Swagger
swagger.info.title=Payments - Subscriptions
swagger.info.description=Manages subscriptions and APIs
swagger.info.version=1.0.0
swagger.info.termsOfServiceUrl=
swagger.info.contact.name=Suporte
swagger.info.contact.email=suporte@gr1d.io
swagger.info.contact.url=https://gr1d.io
swagger.info.license=https://gr1d.io
swagger.info.licenseUrl=https://gr1d.io

#configuração para OAUTH2
swagger.security.securityType=OAUTH2
swagger.security.oauth2.name=Oauth2
swagger.security.oauth2.clientId=${gr1d.keycloak.serviceAccount.clientId}
swagger.security.oauth2.clientSecret=${gr1d.keycloak.serviceAccount.clientSecret}
swagger.security.oauth2.authorizeEndpointUrl=https://localhost:4200/
swagger.security.oauth2.tokenEndpointUrl=https://localhost:4200/

swagger.enabled=${SWAGGER_ENABLED:true}

#Google Cloud Storage
gr1d.upload.cloudStorage.bucketName=${BUCKET_NAME:payments-storage}
gr1d.upload.strategy=STORAGE

gr1d.upload.google.storage.credentials.type=${GOOGLE_CREDENTIALS_TYPE:service_account}
gr1d.upload.google.storage.credentials.project_id=${GOOGLE_CREDENTIALS_PROJECT_ID:}
gr1d.upload.google.storage.credentials.private_key_id=${GOOGLE_CREDENTIALS_PRIVATE_KEY_ID:}
gr1d.upload.google.storage.credentials.private_key=${GOOGLE_CREDENTIALS_PRIVATE_KEY:}
gr1d.upload.google.storage.credentials.client_email=${GOOGLE_CREDENTIALS_CLIENT_EMAIL:}
gr1d.upload.google.storage.credentials.client_id=${GOOGLE_CREDENTIALS_CLIENT_ID:}
gr1d.upload.google.storage.credentials.auth_uri=${GOOGLE_CREDENTIALS_AUTH_URI:https://accounts.google.com/o/oauth2/auth}
gr1d.upload.google.storage.credentials.token_uri=${GOOGLE_CREDENTIALS_TOKEN_URI:https://oauth2.googleapis.com/token}
gr1d.upload.google.storage.credentials.auth_provider_x509_cert_url=${GOOGLE_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL:https://www.googleapis.com/oauth2/v1/certs}
gr1d.upload.google.storage.credentials.client_x509_cert_url=${GOOGLE_CREDENTIALS_CLIENT_X509_CERT_URL:}

gr1d.subscription.integration.bridgeService=${SERVICE_BRIDGE:https://bridge.dev.gr1d.io}
gr1d.subscription.integration.recipientService=${SERVICE_RECIPIENTS:http://localhost:8082}
gr1d.integration.whitelabelService=${SERVICE_WHITELABEL:http://localhost:8086}

spring.flyway.enabled=true
spring.flyway.validateOnMigrate=true
spring.flyway.ignoreMissingMigrations=true
spring.flyway.out-of-order=true